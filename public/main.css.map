{"version":3,"file":"main.css","mappings":"AAAA,iCAAiC;AACjC;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAgI;EAChI,iFAAiF;AACnF;AACA,6BAA6B;AAC7B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA4H;EAC5H,gEAAgE;AAClE;AACA,8BAA8B;AAC9B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA6H;EAC7H,0BAA0B;AAC5B;AACA,0BAA0B;AAC1B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAyH;EACzH,0BAA0B;AAC5B;AACA,+BAA+B;AAC/B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA8H;EAC9H,yGAAyG;AAC3G;AACA,8BAA8B;AAC9B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA6H;EAC7H,2GAA2G;AAC7G;AACA,0BAA0B;AAC1B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAyH;EACzH,yJAAyJ;AAC3J;;AC9DA,iCAAiC;AACjC;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAgI;EAChI,iFAAiF;AACnF;AACA,6BAA6B;AAC7B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA4H;EAC5H,gEAAgE;AAClE;AACA,8BAA8B;AAC9B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA6H;EAC7H,0BAA0B;AAC5B;AACA,0BAA0B;AAC1B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAyH;EACzH,0BAA0B;AAC5B;AACA,+BAA+B;AAC/B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA8H;EAC9H,yGAAyG;AAC3G;AACA,8BAA8B;AAC9B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA6H;EAC7H,2GAA2G;AAC7G;AACA,0BAA0B;AAC1B;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAyH;EACzH,yJAAyJ;AAC3J;;AC9DA,SACC,iBAGD,KACC,WACA,YACA,OACA,MACA,iBAGD,uCACC,aACA,mBACA,uBAUD,sFACC,kBC1BD,OACE,yBCIF,2ZAiFE,SACA,UACA,SACA,eACA,aACA,wBAGF,8EAWE,cAEF,KACE,cAEF,MAEE,gBAEF,aAEE,YAEF,oDAIE,WACA,aAEF,MACE,yBACA,iBC/HF,mBAGC,sBAED,MACC,8BACA,sCAED,KAGC,8BCNY,CDOZ,wBACA,cAEA,qCACA,4CAGA,2BAEA,eEuhBG,0BFpiBJ,KAgBE,wBACA,cACA,mBAIF,KACC,2BACA,mBAGD,EACC,qBACA,cACA,aAGD,OACC,gBACA,YACA,cACA,eACA,aAGD,GACC,gBACA,eAGD,EACC,gBACA,kBAGD,IACC,oBACA,iBACA,yBACA,sBACA,qBAUD,OACC,eACA,MACA,OACA,aACA,UAGD,SACC,eACA,aACA,4BACA,UACA,SACA,aAED,WACC,WACA,YACA,eACA,kBAED,IACC,MAED,IACC,UAED,IACC,UAED,KACC,iBACA,UACA,WACA,YG9GD,WAEC,eACA,MACA,OACA,WACA,aACA,gBACA,UAIA,oDAEC,YFZW,CGFb,IACC,eACA,MACA,OACA,UACA,YFwiBG,yBE7iBJ,IAQE,aAIF,cACC,cACA,WACA,YACA,iBACA,kBAGD,mBACC,UAGD,uCACC,WCzBD,OACC,gBACA,aACA,WACA,kBAGD,kBACC,kBACA,YACA,aACA,SACA,6CACA,YHgiBG,yBGtiBJ,kBASE,cChBF,KACC,aACA,mBACA,uBACA,eACA,qBACA,wBAEA,iBACA,qBACA,mBACA,WACA,yBACA,kBAEA,gBACA,YACA,UACA,oBACA,iBAEA,kBAEA,kBASD,uBAEC,aACA,iBACA,kBACA,WACA,8BAED,YACC,WAGD,aACC,WACA,kBACA,QACA,SACA,wBACA,yBACA,0BACA,kBACA,kBAGD,4BAEC,kBACA,aACA,mBACA,uBACA,WACA,YAGD,WACC,UACA,mBACA,WACA,YACA,kBACA,mCAGD,uBACC,kBL1EY,CK4Eb,mCAEC,WC7ED,iBACC,eACA,gBCLD,gBACC,eACA,gBCFD,KACC,eACA,WACA,YACA,kBAGD,OAGC,aACA,uBACA,uBACA,sBACA,cACA,WACA,YACA,iBAEA,yBACA,sBACA,UACA,kBPuhBG,yBOtiBJ,OAkBE,gBAIF,cAEC,gBAOD,aACC,aACA,kBACA,SACA,kBACA,mBACA,gBACA,mBAWD,WACC,cACA,kBACA,SACA,aACA,oBACA,WACA,YACA,UAGD,QACC,mBCpED,SAGC,iBAED,kBACC,cACA,eACA,aACA,mBACA,uBACA,qCRkiBG,0BQxiBJ,kBASE,sCR+hBE,yBQxiBJ,kBAYE,sCAIF,eACC,YACA,aACA,mBACA,YAEA,eRkhBG,0BQxhBJ,eASE,qCACA,cR8gBE,yBQxhBJ,eAaE,WACA,YAEA,cACA,sCAIF,gBAEC,qBACA,eACA,cACA,sBACA,iBChDD,UACC,iBACA,mBAED,mBAEC,sBACA,uBACA,gBACA,YAED,iBAEC,mBACA,UAED,gBAEC,eACA,UACA,iBAED,kBACC,UACA,kB","sources":["webpack://Webpack-Starter-Repo-2023/./node_modules/@fontsource/inter/index.css","webpack://Webpack-Starter-Repo-2023/./node_modules/@fontsource/inter/900.css","webpack://Webpack-Starter-Repo-2023/./styles/utils/mixins.scss","webpack://Webpack-Starter-Repo-2023/./styles/utils/vendors.scss","webpack://Webpack-Starter-Repo-2023/./styles/base/reset.scss","webpack://Webpack-Starter-Repo-2023/./styles/base/base.scss","webpack://Webpack-Starter-Repo-2023/./styles/utils/variables.scss","webpack://Webpack-Starter-Repo-2023/./node_modules/include-media/dist/_include-media.scss","webpack://Webpack-Starter-Repo-2023/./styles/layout/preloader.scss","webpack://Webpack-Starter-Repo-2023/./styles/layout/navigation.scss","webpack://Webpack-Starter-Repo-2023/./styles/layout/footer.scss","webpack://Webpack-Starter-Repo-2023/./styles/layout/btn.scss","webpack://Webpack-Starter-Repo-2023/./styles/shared/titles.scss","webpack://Webpack-Starter-Repo-2023/./styles/shared/paragraph.scss","webpack://Webpack-Starter-Repo-2023/./styles/pages/home/home.scss","webpack://Webpack-Starter-Repo-2023/./styles/pages/home/gallery.scss","webpack://Webpack-Starter-Repo-2023/./styles/pages/home/describe.scss"],"sourcesContent":["/* inter-cyrillic-ext-400-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/inter-cyrillic-ext-400-normal.woff2') format('woff2'), url('./files/inter-all-400-normal.woff') format('woff');\n  unicode-range: U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F;\n}\n/* inter-cyrillic-400-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/inter-cyrillic-400-normal.woff2') format('woff2'), url('./files/inter-all-400-normal.woff') format('woff');\n  unicode-range: U+0301,U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116;\n}\n/* inter-greek-ext-400-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/inter-greek-ext-400-normal.woff2') format('woff2'), url('./files/inter-all-400-normal.woff') format('woff');\n  unicode-range: U+1F00-1FFF;\n}\n/* inter-greek-400-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/inter-greek-400-normal.woff2') format('woff2'), url('./files/inter-all-400-normal.woff') format('woff');\n  unicode-range: U+0370-03FF;\n}\n/* inter-vietnamese-400-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/inter-vietnamese-400-normal.woff2') format('woff2'), url('./files/inter-all-400-normal.woff') format('woff');\n  unicode-range: U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EF9,U+20AB;\n}\n/* inter-latin-ext-400-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/inter-latin-ext-400-normal.woff2') format('woff2'), url('./files/inter-all-400-normal.woff') format('woff');\n  unicode-range: U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF;\n}\n/* inter-latin-400-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/inter-latin-400-normal.woff2') format('woff2'), url('./files/inter-all-400-normal.woff') format('woff');\n  unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;\n}\n","/* inter-cyrillic-ext-900-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 900;\n  src: url('./files/inter-cyrillic-ext-900-normal.woff2') format('woff2'), url('./files/inter-all-900-normal.woff') format('woff');\n  unicode-range: U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F;\n}\n/* inter-cyrillic-900-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 900;\n  src: url('./files/inter-cyrillic-900-normal.woff2') format('woff2'), url('./files/inter-all-900-normal.woff') format('woff');\n  unicode-range: U+0301,U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116;\n}\n/* inter-greek-ext-900-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 900;\n  src: url('./files/inter-greek-ext-900-normal.woff2') format('woff2'), url('./files/inter-all-900-normal.woff') format('woff');\n  unicode-range: U+1F00-1FFF;\n}\n/* inter-greek-900-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 900;\n  src: url('./files/inter-greek-900-normal.woff2') format('woff2'), url('./files/inter-all-900-normal.woff') format('woff');\n  unicode-range: U+0370-03FF;\n}\n/* inter-vietnamese-900-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 900;\n  src: url('./files/inter-vietnamese-900-normal.woff2') format('woff2'), url('./files/inter-all-900-normal.woff') format('woff');\n  unicode-range: U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EF9,U+20AB;\n}\n/* inter-latin-ext-900-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 900;\n  src: url('./files/inter-latin-ext-900-normal.woff2') format('woff2'), url('./files/inter-all-900-normal.woff') format('woff');\n  unicode-range: U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF;\n}\n/* inter-latin-900-normal*/\n@font-face {\n  font-family: 'Inter';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 900;\n  src: url('./files/inter-latin-900-normal.woff2') format('woff2'), url('./files/inter-all-900-normal.woff') format('woff');\n  unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;\n}\n","%page {\r\n\tmin-height: 100vh;\r\n}\r\n\r\n%cover {\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tobject-fit: cover;\r\n}\r\n\r\n%center {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n}\r\n\r\n%absolute {\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n}\r\n\r\n%hidden {\r\n\tvisibility: hidden;\r\n\t// opacity: 0;\r\n}\r\n",".dg.ac {\r\n  z-index: 99999 !important;\r\n}\r\n","/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml,\r\nbody,\r\ndiv,\r\nspan,\r\napplet,\r\nobject,\r\niframe,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\np,\r\nblockquote,\r\npre,\r\na,\r\nabbr,\r\nacronym,\r\naddress,\r\nbig,\r\ncite,\r\ncode,\r\ndel,\r\ndfn,\r\nem,\r\nimg,\r\nins,\r\nkbd,\r\nq,\r\ns,\r\nsamp,\r\nsmall,\r\nstrike,\r\nstrong,\r\nsub,\r\nsup,\r\ntt,\r\nvar,\r\nb,\r\nu,\r\ni,\r\ncenter,\r\ndl,\r\ndt,\r\ndd,\r\nol,\r\nul,\r\nli,\r\nfieldset,\r\nform,\r\nlabel,\r\nlegend,\r\ntable,\r\ncaption,\r\ntbody,\r\ntfoot,\r\nthead,\r\ntr,\r\nth,\r\ntd,\r\narticle,\r\naside,\r\ncanvas,\r\ndetails,\r\nembed,\r\nfigure,\r\nfigcaption,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\noutput,\r\nruby,\r\nsection,\r\nsummary,\r\ntime,\r\nmark,\r\naudio,\r\nvideo {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\nsection {\r\n  display: block;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nol,\r\nul {\r\n  list-style: none;\r\n}\r\nblockquote,\r\nq {\r\n  quotes: none;\r\n}\r\nblockquote:before,\r\nblockquote:after,\r\nq:before,\r\nq:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n","*,\r\n*:after,\r\n*:before {\r\n\tbox-sizing: border-box;\r\n}\r\n:root {\r\n\t--data-color-primary: #{$color-black};\r\n\t--data-color-secondary: #{$color-white};\r\n}\r\nhtml {\r\n\t@extend %cover;\r\n\r\n\tfont-family: $font-inter;\r\n\tfont-size: calc(100vw / 1920 * 10);\r\n\tline-height: 1;\r\n\r\n\tcolor: rgb(var(--data-color-primary));\r\n\tbackground: rgb(var(--data-color-secondary));\r\n\t// overflow: hidden;\r\n\r\n\toverscroll-behavior-x: none;\r\n\r\n\tcursor: default;\r\n\r\n\t@include media('<tablet') {\r\n\t\tfont-size: calc(100vw / 343 * 10);\r\n\t\toverflow: auto;\r\n\t\toverflow-x: hidden;\r\n\t}\r\n}\r\n\r\nbody {\r\n\toverscroll-behavior-x: none;\r\n\tbackground: #f5f6fa;\r\n}\r\n\r\na {\r\n\ttext-decoration: none;\r\n\tcolor: inherit;\r\n\toutline: none;\r\n}\r\n\r\nbutton {\r\n\tbackground: none;\r\n\tborder: none;\r\n\tcolor: inherit;\r\n\tcursor: pointer;\r\n\toutline: none;\r\n}\r\n\r\nh1 {\r\n\tfont-weight: 900;\r\n\tfont-size: 6rem;\r\n}\r\n\r\np {\r\n\tfont-weight: 400;\r\n\tfont-size: 1.35rem;\r\n}\r\n\r\nimg {\r\n\tpointer-events: none;\r\n\tuser-select: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n}\r\n\r\n// .content {\r\n// \toverflow: hidden;\r\n// }\r\n\r\n// .refresh {\r\n// \ttouch-action: none;\r\n// }\r\n.webgl {\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\toutline: none;\r\n\tz-index: z('canvas');\r\n}\r\n\r\n.measure {\r\n\tposition: fixed;\r\n\theight: 400px;\r\n\tborder-left: 10px solid #fff;\r\n\tleft: 50px;\r\n\ttop: 50px;\r\n\tz-index: 1000;\r\n}\r\n.measure * {\r\n\twidth: 10px;\r\n\theight: 10px;\r\n\tbackground: red;\r\n\tposition: absolute;\r\n}\r\n.m1 {\r\n\ttop: 0;\r\n}\r\n.m2 {\r\n\ttop: 200px;\r\n}\r\n.m3 {\r\n\ttop: 400px;\r\n}\r\n.dot {\r\n\tbackground: green;\r\n\tleft: 30px;\r\n\twidth: 40px;\r\n\theight: 40px;\r\n}\r\n","$color-white: '255, 255, 255';\r\n$color-black: '0, 0, 0';\r\n$color-main: #a3aedb;\r\n\r\n$ease-in-out: cubic-bezier(0, 0, 0.975, 1);\r\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\r\n$font-inter: 'Inter', sans-serif;\r\n$z-indexes: ('preloader', 'navigation', 'content', 'canvas');\r\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".preloader {\r\n\t@extend %center;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100vh;\r\n\tbackground: #fff;\r\n\tz-index: z('preloader');\r\n}\r\n\r\n.preloader__icon {\r\n\t& svg path,\r\n\t& svg rect {\r\n\t\tfill: $color-main;\r\n\t}\r\n}\r\n","nav {\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tz-index: z('navigation');\r\n\tpadding: 0 0;\r\n\r\n\t@include media('<phone') {\r\n\t\tpadding: 0 0;\r\n\t}\r\n}\r\n\r\n.header__logo {\r\n\tdisplay: block;\r\n\twidth: 50px;\r\n\theight: auto;\r\n\tmargin: 52px 60px;\r\n\tposition: relative;\r\n}\r\n\r\n.header__logo__img {\r\n\topacity: 1;\r\n}\r\n\r\n.header__logo:hover > .header__logo__img {\r\n\topacity: 0.8;\r\n}\r\n","footer {\r\n\tmargin-top: 8rem;\r\n\tpadding: 2rem;\r\n\twidth: 100%;\r\n\tposition: relative;\r\n}\r\n\r\nfooter .signature {\r\n\tposition: absolute;\r\n\tbottom: 30px;\r\n\theight: 300px;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, 0%) rotate(-10deg);\r\n\topacity: 0.22;\r\n\r\n\t@include media('<phone') {\r\n\t\theight: 200px;\r\n\t}\r\n}\r\n",".btn {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tcursor: pointer;\r\n\t-moz-appearance: none;\r\n\t-webkit-appearance: none;\r\n\r\n\tborder-width: 0px;\r\n\tborder-color: #d8d4cf;\r\n\tborder-style: solid;\r\n\tcolor: #000;\r\n\tbackground: transparent;\r\n\tborder-radius: 7px;\r\n\r\n\tmin-width: 16rem;\r\n\theight: 6rem;\r\n\tpadding: 0;\r\n\tfont-family: inherit;\r\n\tfont-size: 1.5rem;\r\n\r\n\tmargin-top: 5.5rem;\r\n\t// margin-left: 3.6rem;\r\n\tposition: relative;\r\n}\r\n\r\n.btn__text {\r\n}\r\n\r\n.btn__text--inner {\r\n}\r\n\r\n.btn:focus,\r\n.btn--hover {\r\n\toutline: none;\r\n\tborder-width: 0px;\r\n\tborder-color: #fff;\r\n\tcolor: #000;\r\n\ttransition: color 0.4s ease-out;\r\n}\r\n.btn:active {\r\n\tcolor: #fff;\r\n}\r\n\r\n.btn::before {\r\n\tcontent: '';\r\n\tposition: absolute;\r\n\ttop: 5px;\r\n\tleft: 5px;\r\n\twidth: calc(100% - 10px);\r\n\theight: calc(100% - 10px);\r\n\tbackground: rgba(0, 0, 0, 0.3);\r\n\tfilter: blur(13px);\r\n\tborder-radius: 7px;\r\n}\r\n\r\n.btn__text,\r\n.btn__text-inner {\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n}\r\n\r\n.btn__text {\r\n\tflex: none;\r\n\tbackground: #e0d9d2;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tborder-radius: 7px;\r\n\ttransition: background 0.4s ease-out;\r\n}\r\n\r\n.btn--hover > .btn__text {\r\n\tbackground: $color-main;\r\n}\r\n.btn--hover > .btn:focus,\r\n.btn--hover {\r\n\tcolor: #fff;\r\n}\r\n","%title-20 {\r\n\tfont-size: 20px;\r\n}\r\n%title-32 {\r\n\tfont-size: 32px;\r\n\tfont-weight: 900;\r\n}\r\n","%paragraph-16 {\r\n\tfont-size: 16px;\r\n\tfont-weight: 400;\r\n}\r\n","main {\r\n\tfont-size: 3rem;\r\n\twidth: 100%;\r\n\theight: auto;\r\n\tposition: relative;\r\n}\r\n\r\n.cover {\r\n\t@extend %hidden;\r\n\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n\tjustify-content: center;\r\n\tflex-direction: column;\r\n\tpadding: 0 12%;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tmin-height: 100vh;\r\n\t// background-image: url('../shared/images/cover.jpg');\r\n\tbackground-position: left;\r\n\tbackground-size: cover;\r\n\tz-index: z('content');\r\n\tposition: relative;\r\n\r\n\t@include media('<phone') {\r\n\t\tpadding: 0 24px;\r\n\t}\r\n}\r\n\r\n.cover__title {\r\n\t@extend %hidden;\r\n\tmax-width: 40rem;\r\n}\r\n\r\n.cover__desc li {\r\n\t@extend %hidden;\r\n}\r\n\r\n.cover__desc {\r\n\tdisplay: flex;\r\n\tfont-size: 1.35rem;\r\n\tgap: 2rem;\r\n\tmargin-top: 1.8rem;\r\n\tmargin-left: 3.6rem;\r\n\tmax-width: 36rem;\r\n\tline-height: 1.5rem;\r\n}\r\n\r\n.cover__desc--hidden {\r\n\t@extend %hidden;\r\n}\r\n\r\n.cover .btn {\r\n\t@extend %hidden;\r\n}\r\n\r\n.separator {\r\n\tdisplay: block;\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\tz-index: 1000;\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tfill: #000;\r\n}\r\n\r\n#btn-gh {\r\n\tmargin-left: 3.6rem;\r\n}\r\n",".gallery {\r\n\t@extend %page;\r\n\t@extend %center;\r\n\tpadding: 4rem 12%;\r\n}\r\n.gallery__wrapper {\r\n\twidth: inherit;\r\n\theight: inherit;\r\n\tdisplay: grid;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tgrid-template-columns: repeat(3, 1fr);\r\n\r\n\t@include media('<tablet') {\r\n\t\tgrid-template-columns: repeat(2, 1fr);\r\n\t}\r\n\t@include media('<phone') {\r\n\t\tgrid-template-columns: repeat(1, 1fr);\r\n\t}\r\n}\r\n\r\n.gallery__item {\r\n\twidth: 318px;\r\n\theight: 318px;\r\n\tborder-radius: 10px;\r\n\tmargin: 1rem;\r\n\r\n\taspect-ratio: 1;\r\n\r\n\t@include media('<tablet') {\r\n\t\tgrid-template-columns: repeat(2, 1fr);\r\n\t\tmargin: 0.7rem;\r\n\t}\r\n\t@include media('<phone') {\r\n\t\twidth: 100%;\r\n\t\theight: auto;\r\n\r\n\t\tmargin: 20px 0;\r\n\t\tgrid-template-columns: repeat(1, 1fr);\r\n\t}\r\n}\r\n\r\n.gallery__image {\r\n\t@extend %hidden;\r\n\taspect-ratio: inherit;\r\n\theight: inherit;\r\n\twidth: inherit;\r\n\tborder-radius: inherit;\r\n\tobject-fit: cover;\r\n}\r\n",".describe {\r\n\tpadding: 4rem 12%;\r\n\tmargin-bottom: 4rem;\r\n}\r\n.describe__wrapper {\r\n\t@extend %center;\r\n\tflex-direction: column;\r\n\talign-items: flex-start;\r\n\tmax-width: 700px;\r\n\tmargin: auto;\r\n}\r\n.describe__title {\r\n\t@extend %title-32;\r\n\tmargin-bottom: 2rem;\r\n\tz-index: z('content');\r\n}\r\n.describe__text {\r\n\t@extend %paragraph-16;\r\n\tpadding: 1rem 0;\r\n\tz-index: z('content');\r\n\tline-height: 20px;\r\n}\r\n.describe__button {\r\n\tz-index: z('content');\r\n\talign-self: center;\r\n}\r\n#canvas__element--field {\r\n}\r\n"],"names":[],"sourceRoot":""}